// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalaryCalculator.Infrastructure;

#nullable disable

namespace SalaryCalculator.Infrastructure.Migrations
{
    [DbContext(typeof(SalaryDbContext))]
    [Migration("20230508125143_addTaxRate")]
    partial class addTaxRate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalaryCalculator.Infrastructure.Entities.IncomeTaxRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("IncomeTaxRates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Up to $14,000",
                            IsActive = true,
                            MaxValue = 14000m,
                            MinValue = 0m,
                            Name = "L1",
                            Rate = 10.5m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Over $14,000 and up to $48,000",
                            IsActive = true,
                            MaxValue = 48000m,
                            MinValue = 14000m,
                            Name = "L2",
                            Rate = 17.5m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Over $48,000 and up to $70,000 ",
                            IsActive = true,
                            MaxValue = 70000m,
                            MinValue = 48000m,
                            Name = "L3",
                            Rate = 30m
                        },
                        new
                        {
                            Id = 4,
                            Description = "Over $70,000 and up to $180,000 ",
                            IsActive = true,
                            MaxValue = 180000m,
                            MinValue = 70000m,
                            Name = "L4",
                            Rate = 33m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Income over $180,000",
                            IsActive = true,
                            MaxValue = 180000m,
                            MinValue = 180000m,
                            Name = "L5",
                            Rate = 39m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
